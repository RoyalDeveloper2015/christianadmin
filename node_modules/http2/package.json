{
  "_args": [
    [
      "http2@git+https://github.com/argon/node-http2.git#apn-2.0.0",
      "Y:\\nodejs\\quickrabbit\\node_modules\\apn"
    ]
  ],
  "_from": "git+https://github.com/argon/node-http2.git#apn-2.0.0",
  "_id": "http2@3.3.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/http2",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/argon/node-http2/apn-2.0.0/package.json",
      "gitUrl": "git://github.com/argon/node-http2.git#apn-2.0.0",
      "httpsUrl": "git+https://github.com/argon/node-http2.git#apn-2.0.0",
      "shortcut": "github:argon/node-http2#apn-2.0.0",
      "ssh": "git@github.com:argon/node-http2.git#apn-2.0.0",
      "sshUrl": "git+ssh://git@github.com/argon/node-http2.git#apn-2.0.0",
      "type": "github"
    },
    "name": "http2",
    "raw": "http2@git+https://github.com/argon/node-http2.git#apn-2.0.0",
    "rawSpec": "git+https://github.com/argon/node-http2.git#apn-2.0.0",
    "scope": null,
    "spec": "git+https://github.com/argon/node-http2.git#apn-2.0.0",
    "type": "hosted"
  },
  "_requiredBy": [
    "/apn"
  ],
  "_resolved": "git+https://github.com/argon/node-http2.git#66126794e7e1d2a5f08d7376a41401911d8e6b71",
  "_shasum": "4bf8e956b36a8943390613030d06398993c401c4",
  "_shrinkwrap": null,
  "_spec": "http2@git+https://github.com/argon/node-http2.git#apn-2.0.0",
  "_where": "Y:\\nodejs\\quickrabbit\\node_modules\\apn",
  "author": {
    "email": "gabor@molnar.es",
    "name": "Gábor Molnár",
    "url": "http://gabor.molnar.es"
  },
  "bugs": {
    "url": "https://github.com/molnarg/node-http2/issues"
  },
  "contributors": [
    {
      "name": "Nick Hurley"
    },
    {
      "name": "Mike Belshe"
    },
    {
      "name": "Yoshihiro Iwanaga"
    },
    {
      "name": "Igor Novikov"
    },
    {
      "name": "James Willcox"
    },
    {
      "name": "David Björklund"
    },
    {
      "name": "Patrick McManus"
    }
  ],
  "dependencies": {},
  "description": "An HTTP/2 client and server implementation",
  "devDependencies": {
    "bunyan": "*",
    "chai": "*",
    "docco": "*",
    "istanbul": "*",
    "mocha": "*"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "gitHead": "66126794e7e1d2a5f08d7376a41401911d8e6b71",
  "homepage": "https://github.com/molnarg/node-http2",
  "keywords": [
    "http",
    "http2",
    "client",
    "server"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "http2",
  "optionalDependencies": {},
  "readme": "node-http2\r\n==========\r\n\r\nAn HTTP/2 ([RFC 7540](http://tools.ietf.org/html/rfc7540))\r\nclient and server implementation for node.js.\r\n\r\n![Travis CI status](https://travis-ci.org/molnarg/node-http2.svg?branch=master)\r\n\r\nInstallation\r\n------------\r\n\r\n```\r\nnpm install http2\r\n```\r\n\r\nAPI\r\n---\r\n\r\nThe API is very similar to the [standard node.js HTTPS API](http://nodejs.org/api/https.html). The\r\ngoal is the perfect API compatibility, with additional HTTP2 related extensions (like server push).\r\n\r\nDetailed API documentation is primarily maintained in the `lib/http.js` file and is [available in\r\nthe wiki](https://github.com/molnarg/node-http2/wiki/Public-API) as well.\r\n\r\nExamples\r\n--------\r\n\r\n### Using as a server ###\r\n\r\n```javascript\r\nvar options = {\r\n  key: fs.readFileSync('./example/localhost.key'),\r\n  cert: fs.readFileSync('./example/localhost.crt')\r\n};\r\n\r\nrequire('http2').createServer(options, function(request, response) {\r\n  response.end('Hello world!');\r\n}).listen(8080);\r\n```\r\n\r\n### Using as a client ###\r\n\r\n```javascript\r\nrequire('http2').get('https://localhost:8080/', function(response) {\r\n  response.pipe(process.stdout);\r\n});\r\n```\r\n\r\n### Simple static file server ###\r\n\r\nAn simple static file server serving up content from its own directory is available in the `example`\r\ndirectory. Running the server:\r\n\r\n```bash\r\n$ node ./example/server.js\r\n```\r\n\r\n### Simple command line client ###\r\n\r\nAn example client is also available. Downloading the server's own source code from the server:\r\n\r\n```bash\r\n$ node ./example/client.js 'https://localhost:8080/server.js' >/tmp/server.js\r\n```\r\n\r\n### Server push ###\r\n\r\nFor a server push example, see the source code of the example\r\n[server](https://github.com/molnarg/node-http2/blob/master/example/server.js) and\r\n[client](https://github.com/molnarg/node-http2/blob/master/example/client.js).\r\n\r\nStatus\r\n------\r\n\r\n* ALPN is only supported in node.js >= 5.0\r\n* Upgrade mechanism to start HTTP/2 over unencrypted channel is not implemented yet\r\n  (issue [#4](https://github.com/molnarg/node-http2/issues/4))\r\n* Other minor features found in\r\n  [this list](https://github.com/molnarg/node-http2/issues?labels=feature) are not implemented yet\r\n\r\nDevelopment\r\n-----------\r\n\r\n### Development dependencies ###\r\n\r\nThere's a few library you will need to have installed to do anything described in the following\r\nsections. After installing/cloning node-http2, run `npm install` in its directory to install\r\ndevelopment dependencies.\r\n\r\nUsed libraries:\r\n\r\n* [mocha](http://visionmedia.github.io/mocha/) for tests\r\n* [chai](http://chaijs.com/) for assertions\r\n* [istanbul](https://github.com/gotwarlost/istanbul) for code coverage analysis\r\n* [docco](http://jashkenas.github.io/docco/) for developer documentation\r\n* [bunyan](https://github.com/trentm/node-bunyan) for logging\r\n\r\nFor pretty printing logs, you will also need a global install of bunyan (`npm install -g bunyan`).\r\n\r\n### Developer documentation ###\r\n\r\nThe developer documentation is generated from the source code using docco and can be viewed online\r\n[here](http://molnarg.github.io/node-http2/doc/). If you'd like to have an offline copy, just run\r\n`npm run-script doc`.\r\n\r\n### Running the tests ###\r\n\r\nIt's easy, just run `npm test`. The tests are written in BDD style, so they are a good starting\r\npoint to understand the code.\r\n\r\n### Test coverage ###\r\n\r\nTo generate a code coverage report, run `npm test --coverage` (which runs very slowly, be patient).\r\nCode coverage summary as of version 3.0.1:\r\n```\r\nStatements   : 92.09% ( 1759/1910 )\r\nBranches     : 82.56% ( 696/843 )\r\nFunctions    : 91.38% ( 212/232 )\r\nLines        : 92.17% ( 1753/1902 )\r\n```\r\n\r\nThere's a hosted version of the detailed (line-by-line) coverage report\r\n[here](http://molnarg.github.io/node-http2/coverage/lcov-report/lib/).\r\n\r\n### Logging ###\r\n\r\nLogging is turned off by default. You can turn it on by passing a bunyan logger as `log` option when\r\ncreating a server or agent.\r\n\r\nWhen using the example server or client, it's very easy to turn logging on: set the `HTTP2_LOG`\r\nenvironment variable to `fatal`, `error`, `warn`, `info`, `debug` or `trace` (the logging level).\r\nTo log every single incoming and outgoing data chunk, use `HTTP2_LOG_DATA=1` besides\r\n`HTTP2_LOG=trace`. Log output goes to the standard error output. If the standard error is redirected\r\ninto a file, then the log output is in bunyan's JSON format for easier post-mortem analysis.\r\n\r\nRunning the example server and client with `info` level logging output:\r\n\r\n```bash\r\n$ HTTP2_LOG=info node ./example/server.js\r\n```\r\n\r\n```bash\r\n$ HTTP2_LOG=info node ./example/client.js 'https://localhost:8080/server.js' >/dev/null\r\n```\r\n\r\nContributors\r\n------------\r\n\r\nThe co-maintainer of the project is [Nick Hurley](https://github.com/todesschaf).\r\n\r\nCode contributions are always welcome! People who contributed to node-http2 so far:\r\n\r\n* [Nick Hurley](https://github.com/todesschaf)\r\n* [Mike Belshe](https://github.com/mbelshe)\r\n* [Yoshihiro Iwanaga](https://github.com/iwanaga)\r\n* [Igor Novikov](https://github.com/vsemogutor)\r\n* [James Willcox](https://github.com/snorp)\r\n* [David Björklund](https://github.com/kesla)\r\n* [Patrick McManus](https://github.com/mcmanus)\r\n\r\nSpecial thanks to Google for financing the development of this module as part of their [Summer of\r\nCode program](https://developers.google.com/open-source/soc/) (project: [HTTP/2 prototype server\r\nimplementation](https://google-melange.appspot.com/gsoc/project/details/google/gsoc2013/molnarg/5818821692620800)), and\r\nNick Hurley of Mozilla, my GSoC mentor, who helped with regular code review and technical advices.\r\n\r\nLicense\r\n-------\r\n\r\nThe MIT License\r\n\r\nCopyright (C) 2013 Gábor Molnár <gabor@molnar.es>\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/molnarg/node-http2.git"
  },
  "scripts": {
    "doc": "docco lib/* --output doc --layout parallel --css doc/docco.css",
    "test": "istanbul test _mocha -- --reporter spec --slow 500 --timeout 15000"
  },
  "version": "3.3.4"
}
